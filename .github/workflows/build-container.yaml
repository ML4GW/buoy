name: build container

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  PATH: /opt/env/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/cuda-11.8/bin:/usr/local/mpi/bin:/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/ucx/bin

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    -
      name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
    -
      name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - 
      name: log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # build the singularity image as a sandbox directory
    # inside a docker container that has singularity
    # installed (take a big breath). Then tar that directory
    # so that we can import it into docker. Doing everything
    # in one fell swoop because of permissions discrepancies
    # inside and outside the container.
    -
      name: build singularity image
      run: |
        docker run \
          --rm \
          -v ${{ github.workspace }}:/opt/buoy \
          --workdir /opt/buoy \
          --privileged \
          --entrypoint /bin/bash \
          quay.io/singularity/singularity:v3.8.1 \
          -c 'singularity build --sandbox /opt/buoy/sandbox apptainer.def'

    # now copy the fs contents into an empty
    # container and push it to the registry,
    # using a lowercase version of the tag since
    # the github environment variables are case-sensitive
    - 
      name: build and push docker image
      # only run on pushes so that we aren't
      # building containers for PRs
      if: ${{ github.event_name == 'push' || startsWith(github.ref, 'refs/tags/') }}
      env:
        tag: ${{ env.REGISTRY }}/${{ github.repository }}/buoy:${{ github.ref_name }}
      run: |
        export TAG_LC=${tag,,}
        cat app.tar.gz | docker import --change "ENV PATH=${{ env.PATH }}" - $TAG_LC
        docker push $TAG_LC


    
